openapi: 3.0.1
info:
 version: 1.0.0
 title: (v1.0) Dynamics 365 Business Central
 description: (v1.0) Business Central Standard APIs
servers:
 - url: https://api.businesscentral.dynamics.com/v2.0/sandbox/api/ivansinglenton/MyApiGroup/v1.0/
   description: (v1.0) "MyCustomAPI"
 - url: https://api.businesscentral.dynamics.com/v2.0/sandbox/api/v1.0
   description: (v1.0) "Sandbox"
 - url: https://api.businesscentral.dynamics.com/v2.0/production/api/v1.0
   description: (v1.0) "Production"
paths:
  /companies:
    description: Provides operations to manage the collection of company entities.
    get:
      tags:
        - companies.company
      summary: Get entities from companies
      operationId: companies.company.ListCompany
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - systemVersion
                - systemVersion desc
                - name
                - name desc
                - displayName
                - displayName desc
                - businessProfileId
                - businessProfileId desc
                - systemCreatedAt
                - systemCreatedAt desc
                - systemCreatedBy
                - systemCreatedBy desc
                - systemModifiedAt
                - systemModifiedAt desc
                - systemModifiedBy
                - systemModifiedBy desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - systemVersion
                - name
                - displayName
                - businessProfileId
                - systemCreatedAt
                - systemCreatedBy
                - systemModifiedAt
                - systemModifiedBy
                - MyItemModels
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - MyItemModels
              type: string
      responses:
        '200':
          $ref: '#/components/responses/Microsoft.NAV.companyCollectionResponse'
        default:
          $ref: '#/components/responses/error'
  '/companies({id})':
    description: Provides operations to manage the collection of company entities.
    get:
      tags:
        - companies.company
      summary: Get entity from companies by key
      operationId: companies.company.GetCompany
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - systemVersion
                - name
                - displayName
                - businessProfileId
                - systemCreatedAt
                - systemCreatedBy
                - systemModifiedAt
                - systemModifiedBy
                - MyItemModels
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
                - MyItemModels
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.company'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/companies({id})/MyItemModels':
    description: Provides operations to manage the MyItemModels property of the Microsoft.NAV.company entity.
    get:
      tags:
        - companies.myItemModels
      summary: Get MyItemModels from companies
      operationId: companies.ListMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - description
                - description desc
                - unitcost
                - unitcost desc
                - unitPrice
                - unitPrice desc
                - unitofMeasure
                - unitofMeasure desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - unitcost
                - unitPrice
                - unitofMeasure
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/Microsoft.NAV.myItemModelsCollectionResponse'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    post:
      tags:
        - companies.myItemModels
      summary: Create new navigation property to MyItemModels for companies
      operationId: companies.CreateMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
      requestBody:
        description: New navigation property
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        required: true
      responses:
        '201':
          description: Created navigation property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/companies({id})/MyItemModels({id1})':
    description: Provides operations to manage the MyItemModels property of the Microsoft.NAV.company entity.
    get:
      tags:
        - companies.myItemModels
      summary: Get MyItemModels from companies
      operationId: companies.GetMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
        - name: id1
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - unitcost
                - unitPrice
                - unitofMeasure
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved navigation property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - companies.myItemModels
      summary: Update the navigation property MyItemModels in companies
      operationId: companies.UpdateMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
        - name: id1
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
      requestBody:
        description: New navigation property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - companies.myItemModels
      summary: Delete navigation property MyItemModels for companies
      operationId: companies.DeleteMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
        - name: id1
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/companies({id})/MyItemModels/$count':
    description: Provides operations to count the resources in the collection.
    get:
      summary: Get the number of the resource
      operationId: Get.Count.MyItemModels-1135
      parameters:
        - name: id
          in: path
          description: 'key: id of company'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: company
      responses:
        '200':
          $ref: '#/components/responses/ODataCountResponse'
        default:
          $ref: '#/components/responses/error'
  /companies/$count:
    description: Provides operations to count the resources in the collection.
    get:
      summary: Get the number of the resource
      operationId: Get.Count.companies-5813
      responses:
        '200':
          $ref: '#/components/responses/ODataCountResponse'
        default:
          $ref: '#/components/responses/error'
  /entityDefinitions:
    description: Provides operations to manage the collection of entityMetadata entities.
    get:
      tags:
        - entityDefinitions.entityMetadata
      summary: Get entities from entityDefinitions
      operationId: entityDefinitions.entityMetadata.ListEntityMetadata
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - entityName
                - entityName desc
                - entitySetName
                - entitySetName desc
                - entityCaptions
                - entityCaptions desc
                - entitySetCaptions
                - entitySetCaptions desc
                - properties
                - properties desc
                - actions
                - actions desc
                - enumMembers
                - enumMembers desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - entityName
                - entitySetName
                - entityCaptions
                - entitySetCaptions
                - properties
                - actions
                - enumMembers
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/Microsoft.NAV.entityMetadataCollectionResponse'
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - entityDefinitions.entityMetadata
      summary: Add new entity to entityDefinitions
      operationId: entityDefinitions.entityMetadata.CreateEntityMetadata
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.entityMetadata'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.entityMetadata'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/entityDefinitions({entityName})':
    description: Provides operations to manage the collection of entityMetadata entities.
    get:
      tags:
        - entityDefinitions.entityMetadata
      summary: Get entity from entityDefinitions by key
      operationId: entityDefinitions.entityMetadata.GetEntityMetadata
      parameters:
        - name: entityName
          in: path
          description: 'key: entityName of entityMetadata'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: entityMetadata
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - entityName
                - entitySetName
                - entityCaptions
                - entitySetCaptions
                - properties
                - actions
                - enumMembers
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.entityMetadata'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - entityDefinitions.entityMetadata
      summary: Update entity in entityDefinitions
      operationId: entityDefinitions.entityMetadata.UpdateEntityMetadata
      parameters:
        - name: entityName
          in: path
          description: 'key: entityName of entityMetadata'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: entityMetadata
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.entityMetadata'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - entityDefinitions.entityMetadata
      summary: Delete entity from entityDefinitions
      operationId: entityDefinitions.entityMetadata.DeleteEntityMetadata
      parameters:
        - name: entityName
          in: path
          description: 'key: entityName of entityMetadata'
          required: true
          schema:
            type: string
          x-ms-docs-key-type: entityMetadata
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /entityDefinitions/$count:
    description: Provides operations to count the resources in the collection.
    get:
      summary: Get the number of the resource
      operationId: Get.Count.entityDefinitions-7d89
      responses:
        '200':
          $ref: '#/components/responses/ODataCountResponse'
        default:
          $ref: '#/components/responses/error'
  /myItemModels:
    description: Provides operations to manage the collection of myItemModels entities.
    get:
      tags:
        - myItemModels.myItemModels
      summary: Get entities from myItemModels
      operationId: myItemModels.myItemModels.ListMyItemModels
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - id desc
                - description
                - description desc
                - unitcost
                - unitcost desc
                - unitPrice
                - unitPrice desc
                - unitofMeasure
                - unitofMeasure desc
                - type
                - type desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - unitcost
                - unitPrice
                - unitofMeasure
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/Microsoft.NAV.myItemModelsCollectionResponse'
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - myItemModels.myItemModels
      summary: Add new entity to myItemModels
      operationId: myItemModels.myItemModels.CreateMyItemModels
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/myItemModels({id})':
    description: Provides operations to manage the collection of myItemModels entities.
    get:
      tags:
        - myItemModels.myItemModels
      summary: Get entity from myItemModels by key
      operationId: myItemModels.myItemModels.GetMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - id
                - description
                - unitcost
                - unitPrice
                - unitofMeasure
                - type
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - myItemModels.myItemModels
      summary: Update entity in myItemModels
      operationId: myItemModels.myItemModels.UpdateMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - myItemModels.myItemModels
      summary: Delete entity from myItemModels
      operationId: myItemModels.myItemModels.DeleteMyItemModels
      parameters:
        - name: id
          in: path
          description: 'key: id of myItemModels'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            format: uuid
          x-ms-docs-key-type: myItemModels
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /myItemModels/$count:
    description: Provides operations to count the resources in the collection.
    get:
      summary: Get the number of the resource
      operationId: Get.Count.myItemModels-2e55
      responses:
        '200':
          $ref: '#/components/responses/ODataCountResponse'
        default:
          $ref: '#/components/responses/error'
  /subscriptions:
    description: Provides operations to manage the collection of subscriptions entities.
    get:
      tags:
        - subscriptions.subscriptions
      summary: Get entities from subscriptions
      operationId: subscriptions.subscriptions.ListSubscriptions
      parameters:
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/count'
        - name: $orderby
          in: query
          description: Order items by property values
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - subscriptionId
                - subscriptionId desc
                - notificationUrl
                - notificationUrl desc
                - resource
                - resource desc
                - userId
                - userId desc
                - lastModifiedDateTime
                - lastModifiedDateTime desc
                - clientState
                - clientState desc
                - expirationDateTime
                - expirationDateTime desc
                - systemCreatedAt
                - systemCreatedAt desc
                - systemCreatedBy
                - systemCreatedBy desc
                - systemModifiedAt
                - systemModifiedAt desc
                - systemModifiedBy
                - systemModifiedBy desc
              type: string
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - subscriptionId
                - notificationUrl
                - resource
                - userId
                - lastModifiedDateTime
                - clientState
                - expirationDateTime
                - systemCreatedAt
                - systemCreatedBy
                - systemModifiedAt
                - systemModifiedBy
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          $ref: '#/components/responses/Microsoft.NAV.subscriptionsCollectionResponse'
        default:
          $ref: '#/components/responses/error'
    post:
      tags:
        - subscriptions.subscriptions
      summary: Add new entity to subscriptions
      operationId: subscriptions.subscriptions.CreateSubscriptions
      requestBody:
        description: New entity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.subscriptions'
        required: true
      responses:
        '201':
          description: Created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.subscriptions'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  '/subscriptions({subscriptionId})':
    description: Provides operations to manage the collection of subscriptions entities.
    get:
      tags:
        - subscriptions.subscriptions
      summary: Get entity from subscriptions by key
      operationId: subscriptions.subscriptions.GetSubscriptions
      parameters:
        - name: subscriptionId
          in: path
          description: 'key: subscriptionId of subscriptions'
          required: true
          schema:
            maxLength: 150
            type: string
          x-ms-docs-key-type: subscriptions
        - name: $select
          in: query
          description: Select properties to be returned
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - subscriptionId
                - notificationUrl
                - resource
                - userId
                - lastModifiedDateTime
                - clientState
                - expirationDateTime
                - systemCreatedAt
                - systemCreatedBy
                - systemModifiedAt
                - systemModifiedBy
              type: string
        - name: $expand
          in: query
          description: Expand related entities
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: array
            items:
              enum:
                - '*'
              type: string
      responses:
        '200':
          description: Retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Microsoft.NAV.subscriptions'
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    patch:
      tags:
        - subscriptions.subscriptions
      summary: Update entity in subscriptions
      operationId: subscriptions.subscriptions.UpdateSubscriptions
      parameters:
        - name: subscriptionId
          in: path
          description: 'key: subscriptionId of subscriptions'
          required: true
          schema:
            maxLength: 150
            type: string
          x-ms-docs-key-type: subscriptions
      requestBody:
        description: New property values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Microsoft.NAV.subscriptions'
        required: true
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
    delete:
      tags:
        - subscriptions.subscriptions
      summary: Delete entity from subscriptions
      operationId: subscriptions.subscriptions.DeleteSubscriptions
      parameters:
        - name: subscriptionId
          in: path
          description: 'key: subscriptionId of subscriptions'
          required: true
          schema:
            maxLength: 150
            type: string
          x-ms-docs-key-type: subscriptions
        - name: If-Match
          in: header
          description: ETag
          schema:
            type: string
      responses:
        '204':
          description: Success
        default:
          $ref: '#/components/responses/error'
      x-ms-docs-operation-type: operation
  /subscriptions/$count:
    description: Provides operations to count the resources in the collection.
    get:
      summary: Get the number of the resource
      operationId: Get.Count.subscriptions-8aee
      responses:
        '200':
          $ref: '#/components/responses/ODataCountResponse'
        default:
          $ref: '#/components/responses/error'
components:
  securitySchemes:
    oAuth:    # <---- arbitrary name
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow. [More info](https://api.example.com/docs/auth)
      flows:
        implicit:   # <---- OAuth flow(authorizationCode, implicit, password or clientCredentials)
          authorizationUrl: https://login.windows.net/common/oauth2/authorize?resource=https://api.businesscentral.dynamics.com
          scopes:
            Financials.ReadWrite.All: financials.read.write.all
  schemas:
    Microsoft.NAV.entityMetadata:
      title: entityMetadata
      type: object
      properties:
        entityName:
          type: string
        entitySetName:
          type: string
          nullable: true
        entityCaptions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
            nullable: true
        entitySetCaptions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
            nullable: true
        properties:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataField'
            nullable: true
        actions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataAction'
            nullable: true
        enumMembers:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataEnumMember'
            nullable: true
      example:
        entityName: string (identifier)
        entitySetName: string
        entityCaptions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        entitySetCaptions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        properties:
          - '@odata.type': Microsoft.NAV.entityMetadataField
        actions:
          - '@odata.type': Microsoft.NAV.entityMetadataAction
        enumMembers:
          - '@odata.type': Microsoft.NAV.entityMetadataEnumMember
    Microsoft.NAV.entityMetadataLabel:
      title: entityMetadataLabel
      type: object
      properties:
        languageCode:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
        caption:
          type: string
      example:
        languageCode: integer
        caption: string
    Microsoft.NAV.entityMetadataField:
      title: entityMetadataField
      type: object
      properties:
        name:
          type: string
        captions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
            nullable: true
      example:
        name: string
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
    Microsoft.NAV.entityMetadataAction:
      title: entityMetadataAction
      type: object
      properties:
        name:
          type: string
        captions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
            nullable: true
      example:
        name: string
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
    Microsoft.NAV.entityMetadataEnumMember:
      title: entityMetadataEnumMember
      type: object
      properties:
        name:
          type: string
        value:
          maximum: 2147483647
          minimum: -2147483648
          type: integer
          format: int32
        captions:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
            nullable: true
      example:
        name: string
        value: integer
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
    Microsoft.NAV.company:
      title: company
      type: object
      properties:
        id:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
        systemVersion:
          type: string
          nullable: true
        name:
          maxLength: 30
          type: string
          nullable: true
        displayName:
          maxLength: 250
          type: string
          nullable: true
        businessProfileId:
          maxLength: 250
          type: string
          nullable: true
        systemCreatedAt:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        systemCreatedBy:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
        systemModifiedAt:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        systemModifiedBy:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
        MyItemModels:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
      example:
        id: string (identifier)
        systemVersion: string
        name: string
        displayName: string
        businessProfileId: string
        systemCreatedAt: string (timestamp)
        systemCreatedBy: string
        systemModifiedAt: string (timestamp)
        systemModifiedBy: string
        MyItemModels:
          - '@odata.type': Microsoft.NAV.myItemModels
    Microsoft.NAV.subscriptions:
      title: subscriptions
      type: object
      properties:
        subscriptionId:
          maxLength: 150
          type: string
        notificationUrl:
          type: string
        resource:
          type: string
        userId:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
        lastModifiedDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        clientState:
          maxLength: 2048
          type: string
          nullable: true
        expirationDateTime:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        systemCreatedAt:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        systemCreatedBy:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
        systemModifiedAt:
          pattern: '^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$'
          type: string
          format: date-time
          nullable: true
        systemModifiedBy:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
          nullable: true
      example:
        subscriptionId: string (identifier)
        notificationUrl: string
        resource: string
        userId: string
        lastModifiedDateTime: string (timestamp)
        clientState: string
        expirationDateTime: string (timestamp)
        systemCreatedAt: string (timestamp)
        systemCreatedBy: string
        systemModifiedAt: string (timestamp)
        systemModifiedBy: string
    Microsoft.NAV.myItemModels:
      title: myItemModels
      type: object
      properties:
        id:
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          format: uuid
        description:
          maxLength: 100
          type: string
          nullable: true
        unitcost:
          type: number
          format: decimal
          nullable: true
        unitPrice:
          type: number
          format: decimal
          nullable: true
        unitofMeasure:
          maxLength: 10
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      example:
        id: string (identifier)
        description: string
        unitcost: number
        unitPrice: number
        unitofMeasure: string
        type: string
    Microsoft.NAV.ODataErrors.ODataError:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/Microsoft.NAV.ODataErrors.MainError'
    Microsoft.NAV.ODataErrors.MainError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
        details:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.ODataErrors.ErrorDetails'
        innererror:
          $ref: '#/components/schemas/Microsoft.NAV.ODataErrors.InnerError'
    Microsoft.NAV.ODataErrors.ErrorDetails:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
          nullable: true
    Microsoft.NAV.ODataErrors.InnerError:
      type: object
      description: The structure of this object is service-specific
    ODataCountResponse:
      type: integer
      format: int32
    Microsoft.NAV.entityMetadataCollectionResponse:
      title: Collection of entityMetadata
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadata'
    Microsoft.NAV.companyCollectionResponse:
      title: Collection of company
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.company'
    Microsoft.NAV.subscriptionsCollectionResponse:
      title: Collection of subscriptions
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.subscriptions'
    Microsoft.NAV.myItemModelsCollectionResponse:
      title: Collection of myItemModels
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.myItemModels'
    Microsoft.NAV.entityMetadataLabelCollectionResponse:
      title: Collection of Microsoft.NAV.entityMetadataLabel
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabel'
    Microsoft.NAV.entityMetadataFieldCollectionResponse:
      title: Collection of Microsoft.NAV.entityMetadataField
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataField'
    Microsoft.NAV.entityMetadataActionCollectionResponse:
      title: Collection of Microsoft.NAV.entityMetadataAction
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataAction'
    Microsoft.NAV.entityMetadataEnumMemberCollectionResponse:
      title: Collection of Microsoft.NAV.entityMetadataEnumMember
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataEnumMember'
  responses:
    error:
      description: error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.ODataErrors.ODataError'
    ODataCountResponse:
      description: The count of the resource
      content:
        text/plain:
          schema:
            $ref: '#/components/schemas/ODataCountResponse'
    Microsoft.NAV.entityMetadataCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataCollectionResponse'
    Microsoft.NAV.companyCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.companyCollectionResponse'
    Microsoft.NAV.subscriptionsCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.subscriptionsCollectionResponse'
    Microsoft.NAV.myItemModelsCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.myItemModelsCollectionResponse'
    Microsoft.NAV.entityMetadataLabelCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataLabelCollectionResponse'
    Microsoft.NAV.entityMetadataFieldCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataFieldCollectionResponse'
    Microsoft.NAV.entityMetadataActionCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataActionCollectionResponse'
    Microsoft.NAV.entityMetadataEnumMemberCollectionResponse:
      description: Retrieved collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Microsoft.NAV.entityMetadataEnumMemberCollectionResponse'
  parameters:
    top:
      name: $top
      in: query
      description: Show only the first n items
      schema:
        minimum: 0
        type: integer
      example: 50
    skip:
      name: $skip
      in: query
      description: Skip the first n items
      schema:
        minimum: 0
        type: integer
    count:
      name: $count
      in: query
      description: Include count of items
      schema:
        type: boolean
    filter:
      name: $filter
      in: query
      description: Filter items by property values
      schema:
        type: string
    search:
      name: $search
      in: query
      description: Search items by search phrases
      schema:
        type: string
  examples:
    Microsoft.NAV.entityMetadata:
      value:
        actions:
          - '@odata.type': Microsoft.NAV.entityMetadataAction
        entityCaptions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        entityName: String (identifier)
        entitySetCaptions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        entitySetName: String
        enumMembers:
          - '@odata.type': Microsoft.NAV.entityMetadataEnumMember
        properties:
          - '@odata.type': Microsoft.NAV.entityMetadataField
    Microsoft.NAV.entityMetadataLabel:
      value:
        caption: String
        languageCode: 0
    Microsoft.NAV.entityMetadataField:
      value:
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        name: String
    Microsoft.NAV.entityMetadataAction:
      value:
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        name: String
    Microsoft.NAV.entityMetadataEnumMember:
      value:
        captions:
          - '@odata.type': Microsoft.NAV.entityMetadataLabel
        name: String
        value: 0
    Microsoft.NAV.company:
      value:
        businessProfileId: String
        displayName: String
        id: 00000000-0000-0000-0000-000000000000 (identifier)
        MyItemModels:
          - '@odata.type': Microsoft.NAV.myItemModels
        name: String
        systemCreatedAt: '0001-01-01T00:00:00.0000000+00:00'
        systemCreatedBy: 00000000-0000-0000-0000-000000000000
        systemModifiedAt: '0001-01-01T00:00:00.0000000+00:00'
        systemModifiedBy: 00000000-0000-0000-0000-000000000000
        systemVersion: String
    Microsoft.NAV.subscriptions:
      value:
        clientState: String
        expirationDateTime: '0001-01-01T00:00:00.0000000+00:00'
        lastModifiedDateTime: '0001-01-01T00:00:00.0000000+00:00'
        notificationUrl: String
        resource: String
        subscriptionId: String (identifier)
        systemCreatedAt: '0001-01-01T00:00:00.0000000+00:00'
        systemCreatedBy: 00000000-0000-0000-0000-000000000000
        systemModifiedAt: '0001-01-01T00:00:00.0000000+00:00'
        systemModifiedBy: 00000000-0000-0000-0000-000000000000
        userId: 00000000-0000-0000-0000-000000000000
    Microsoft.NAV.myItemModels:
      value:
        description: String
        id: 00000000-0000-0000-0000-000000000000 (identifier)
        type: String
        unitcost: 0
        unitofMeasure: String
        unitPrice: 0
tags:
  - name: companies.company
    x-ms-docs-toc-type: page
  - name: companies.myItemModels
    x-ms-docs-toc-type: page
  - name: entityDefinitions.entityMetadata
    x-ms-docs-toc-type: page
  - name: myItemModels.myItemModels
    x-ms-docs-toc-type: page
  - name: subscriptions.subscriptions
    x-ms-docs-toc-type: page
security:
 - oAuth: [Financials.ReadWrite.All]